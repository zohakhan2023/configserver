name: Deploy AWS Environment and Application

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.0

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan

      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: terraform apply -auto-approve

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/my-app:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/my-app:cache
          cache-to: type=registry,ref=${{ secrets.DOCKER_REGISTRY }}/my-app:cache,mode=max

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up kubectl
        uses: kubectl-action/setup-kubectl@v2
        with:
          version: '1.24.0'

      - name: Configure kubectl
        run: |
          aws eks update-kubeconfig --name my-cluster --region ${{ secrets.AWS_REGION }}

      - name: Deploy application to Kubernetes
        run: |
          kubectl apply -f k8s/

      - name: Install Istio
        run: |
          curl -L https://istio.io/downloadIstio | sh -
          cd istio-*
          export PATH=$PWD/bin:$PATH
          istioctl install --set profile=demo -y

      - name: Apply Istio configurations
        run: |
          kubectl apply -f istio/

      - name: Monitor deployment
        run: |
          kubectl rollout status deployment/my-app
